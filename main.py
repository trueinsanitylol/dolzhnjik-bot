import telebot
import os
import random


BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = telebot.TeleBot(BOT_TOKEN)
debtors = {}

@bot.message_handler(content_types=['new_chat_members'])
def handle_new_member(message):
    for user in message.new_chat_members:
        username = user.username or user.first_name
        if username not in debtors:
            debt = random.randint(1000, 10_000_000)
            debtors[username] = debt
            bot.send_message(message.chat.id, f"@{username} —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω {debt:,}‚ÇΩ!")

@bot.message_handler(commands=['—Å–ø–∏—Å–æ–∫'])
def show_debtors(message):
    if not debtors:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –ø—É—Å—Ç.")
        return
    text = "üí∞ –î–æ–ª–∂–Ω–∏–∫–∏:\n"
    for i, (name, amount) in enumerate(debtors.items(), 1):
        text += f"{i}. @{name} –¥–æ–ª–∂–µ–Ω {amount:,}‚ÇΩ\n"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['—É–¥–∞–ª–∏—Ç—å'])
def remove_debtor(message):
    try:
        username = message.text.split()[1].lstrip('@')
        if username in debtors:
            del debtors[username]
            bot.send_message(message.chat.id, f"@{username} –±–æ–ª—å—à–µ –Ω–µ –≤ –¥–æ–ª–≥–∞—Ö.")
        else:
            bot.send_message(message.chat.id, f"@{username} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except IndexError:
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Ç–∞–∫: /—É–¥–∞–ª–∏—Ç—å @username")

bot.polling()
